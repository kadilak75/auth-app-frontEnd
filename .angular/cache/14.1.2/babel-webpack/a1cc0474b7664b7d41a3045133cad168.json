{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nexport let RegistroComponent = /*#__PURE__*/(() => {\n  class RegistroComponent {\n    constructor(fb) {\n      this.fb = fb; //AQUI TEMPORALMENTE\n      // string en el \n\n      this.nombreApellidoPattern = '([a-zA-Z]+) ([a-zA-Z]+)';\n      this.miFormulario = this.fb.group({\n        nombre: ['', [Validators.required, Validators.pattern(this.nombreApellidoPattern)]]\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  RegistroComponent.ɵfac = function RegistroComponent_Factory(t) {\n    return new (t || RegistroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  RegistroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistroComponent,\n    selectors: [[\"app-registro\"]],\n    decls: 46,\n    vars: 5,\n    consts: [[1, \"row\"], [1, \"col\"], [\"autocomplete\", \"off\", 3, \"formGroup\"], [1, \"row\", \"mb-3\"], [1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"type\", \"text\", \"placeholder\", \"Nombre del usuario\", \"formControlName\", \"nombre\", 1, \"form-control\"], [1, \"form-text\", \"text-danger\"], [\"type\", \"email\", \"placeholder\", \"Email del usuario\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Nombre del usuario\", 1, \"form-control\"], [\"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"password\", \"placeholder\", \"Confirmar Password\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", \"float-end\"]],\n    template: function RegistroComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Validaciones Reactivas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"form\", 2)(6, \"div\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementStart(11, \"span\", 7);\n        i0.ɵɵtext(12, \" Debe de ser en Formato de nombre y apellido \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 4);\n        i0.ɵɵtext(15, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 5);\n        i0.ɵɵelement(17, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\", 4);\n        i0.ɵɵtext(20, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 5);\n        i0.ɵɵelement(22, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\", 4);\n        i0.ɵɵtext(25, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 5);\n        i0.ɵɵelement(27, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 3)(29, \"label\", 4);\n        i0.ɵɵtext(30, \"Repetir Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 5);\n        i0.ɵɵelement(32, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 0)(34, \"div\", 1)(35, \"button\", 12);\n        i0.ɵɵtext(36, \" Crear \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(37, \"span\");\n        i0.ɵɵtext(38, \"Valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"pre\");\n        i0.ɵɵtext(40);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"span\");\n        i0.ɵɵtext(42, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"pre\");\n        i0.ɵɵtext(44);\n        i0.ɵɵpipe(45, \"json\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.miFormulario);\n        i0.ɵɵadvance(35);\n        i0.ɵɵtextInterpolate(ctx.miFormulario.valid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(45, 3, ctx.miFormulario.controls.nombre.errors));\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.JsonPipe]\n  });\n  return RegistroComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}