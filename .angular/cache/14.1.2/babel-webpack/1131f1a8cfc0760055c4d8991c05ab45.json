{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../shared/validator/validator.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction RegistroComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \" Debe de ser en Formato de nombre y apellido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let RegistroComponent = /*#__PURE__*/(() => {\n  class RegistroComponent {\n    constructor(fb, validator) {\n      this.fb = fb;\n      this.validator = validator; //AQUI TEMPORALMENTE\n\n      this.nombreApellidoPattern = '([a-zA-Z]+) ([a-zA-Z]+)';\n      this.emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\n      this.regex = new RegExp('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$');\n      this.miFormulario = this.fb.group({\n        //Validators.pattern() evalua el campo junto a una RegExp, se le puede pasar como ARG un string con esta\n        //arquitectura o una RegExp ya compilada\n        nombre: ['', [Validators.required, Validators.pattern(this.validator.nombreApellidoPattern)]],\n        email: ['', [Validators.required, Validators.pattern(this.validator.regex)]],\n        username: ['', [Validators.required, this.validator.noPuedeSerStrider]],\n        password: ['', [Validators.required, Validators.min(6)]],\n        confirmar: ['', [Validators.required]]\n      }, {\n        validators: [this.validator.camposIguales('password1', 'con')]\n      });\n    } //Validacion personalizada, recibe el valor de un campo y si no cumple las condiciones\n    //regresamos cualquier objeto con un valor true, esto le indica al ReactiveForms que el\n    //campo no es valido, si regresamos null el campo es valido\n\n\n    noPuedeSerStrider(control) {\n      var _a;\n\n      console.log(control.value);\n      const valor = (_a = control.value) === null || _a === void 0 ? void 0 : _a.trim().toLowerCase();\n\n      if (valor === 'strider') {\n        return {\n          noStrider: true\n        };\n      }\n\n      return null;\n      console.log(valor);\n    }\n\n    ngOnInit() {\n      this.miFormulario.reset({\n        nombre: 'Maurizio Olivastri',\n        email: 'mailexample@mail.com',\n        username: 'Molivastri24'\n      });\n    }\n\n    campoNoValido(campo) {\n      var _a, _b;\n\n      return ((_a = this.miFormulario.get(campo)) === null || _a === void 0 ? void 0 : _a.invalid) && ((_b = this.miFormulario.get(campo)) === null || _b === void 0 ? void 0 : _b.touched);\n    }\n\n    submitFormulario() {\n      console.log(this.miFormulario.value);\n      this.miFormulario.markAllAsTouched();\n    }\n\n  }\n\n  RegistroComponent.ɵfac = function RegistroComponent_Factory(t) {\n    return new (t || RegistroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ValidatorService));\n  };\n\n  RegistroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistroComponent,\n    selectors: [[\"app-registro\"]],\n    decls: 69,\n    vars: 21,\n    consts: [[1, \"row\"], [1, \"col\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"type\", \"text\", \"placeholder\", \"Nombre del usuario\", \"formControlName\", \"nombre\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email del usuario\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Nombre del usuario\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"confirmar\", \"placeholder\", \"Confirmar Password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"float-end\"], [1, \"form-text\", \"text-danger\"]],\n    template: function RegistroComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Validaciones Reactivas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistroComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submitFormulario();\n        });\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵtemplate(11, RegistroComponent_span_11_Template, 2, 0, \"span\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 4);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 5);\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 4);\n        i0.ɵɵtext(19, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 5);\n        i0.ɵɵelement(21, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\", 4);\n        i0.ɵɵtext(24, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 5);\n        i0.ɵɵelement(26, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 3)(28, \"label\", 4);\n        i0.ɵɵtext(29, \"Repetir Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 5);\n        i0.ɵɵelement(31, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 0)(33, \"div\", 1)(34, \"button\", 12);\n        i0.ɵɵtext(35, \" Crear \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"span\");\n        i0.ɵɵtext(37);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵelementStart(39, \"span\");\n        i0.ɵɵtext(40, \"Form Errors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"pre\");\n        i0.ɵɵtext(42);\n        i0.ɵɵpipe(43, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"span\");\n        i0.ɵɵtext(45, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"pre\");\n        i0.ɵɵtext(47);\n        i0.ɵɵpipe(48, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"span\");\n        i0.ɵɵtext(50, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"pre\");\n        i0.ɵɵtext(52);\n        i0.ɵɵpipe(53, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"span\");\n        i0.ɵɵtext(55, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"pre\");\n        i0.ɵɵtext(57);\n        i0.ɵɵpipe(58, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"span\");\n        i0.ɵɵtext(60, \"password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"pre\");\n        i0.ɵɵtext(62);\n        i0.ɵɵpipe(63, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"span\");\n        i0.ɵɵtext(65, \"Confirmar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"pre\");\n        i0.ɵɵtext(67);\n        i0.ɵɵpipe(68, \"json\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.miFormulario);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.campoNoValido(\"nombre\"));\n        i0.ɵɵadvance(26);\n        i0.ɵɵtextInterpolate1(\"Valid \", ctx.miFormulario.valid, \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(43, 9, ctx.miFormulario.errors), \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(48, 11, ctx.miFormulario.controls.nombre.errors));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(53, 13, ctx.miFormulario.controls.email.errors));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(58, 15, ctx.miFormulario.controls.username.errors));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(63, 17, ctx.miFormulario.controls.password.errors));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(68, 19, ctx.miFormulario.controls.confirmar.errors));\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.JsonPipe]\n  });\n  return RegistroComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}