{"ast":null,"code":"import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EmailValidatorService = /*#__PURE__*/(() => {\n  class EmailValidatorService {\n    constructor(http) {\n      this.http = http;\n    } //el metoon \n\n\n    validate(control) {\n      const email = control.value;\n      return this.http.get(`http://localhost:3000/usuarios?q=${email}`).pipe(delay(3000), map(resp => {\n        return resp.length === 0 ? null : {\n          emailTomado: true\n        };\n      }));\n    }\n\n  }\n\n  EmailValidatorService.ɵfac = function EmailValidatorService_Factory(t) {\n    return new (t || EmailValidatorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  EmailValidatorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmailValidatorService,\n    factory: EmailValidatorService.ɵfac,\n    providedIn: 'root'\n  });\n  return EmailValidatorService;\n})();","map":null,"metadata":{},"sourceType":"module"}